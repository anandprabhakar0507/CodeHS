class ContactBook:
    """
    This class represents a book of contacts.
    It can store names and phone numbers.
    """
    
    def __init__(self):
        # Create an empty dictionary
        self.contacts = {}
	
    def __repr__(self):
        # Just print a string version of the dictionary
		return str(self.contacts)
	
    def __add__(self, other):
		
		# Your code here! First, make a new ContactBook that
		other.contacts = {}
		# you will eventually return.
		return (self.contacts + other.contacts)
		# Then, go through this contact book (self), and add
		# the contacts in it. Make sure to account for the
		# possibility that the name is in both books. If it
		# is, AND the phone numbers in each book are different
		# for the same name, insert
		#
		# "phone_number_1 or phone_number_2"
		#
		# into the new book. Otherwise, just insert the
		# phone number from this book into the new one.

		# Finally, get all the names from the other book that 
		# weren't in this book.
		
		# Finally, return your new ContactBook. (Replace this
		# line!)
		return {}
		
	
    def add_contact(self, name, number):
        # Adds a name --> phone number pair to
        # the dictionary.
		self.contacts[name] = number

#############################
# Program starts here

cb1 = ContactBook()
cb2 = ContactBook()

cb1.add_contact("Jonathan", "444-555-6666")
cb1.add_contact("Puneet", "333-555-7777")
cb2.add_contact("Jonathan", "222-555-8888")
cb2.add_contact("Lisa", "111-555-9999")

print cb1
print cb2

# The result of this should be a book that
# looks like this:
#
# {
#     "Jonathan": "444-555-6666 or 222-555-8888",
#     "Puneet": "333-555-7777",
#     "Lisa": "111-555-9999"
# }
cb3 = cb1 + cb2

print cb3
